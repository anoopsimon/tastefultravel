{"version":3,"sources":["logo.svg","components/LoginButton.js","components/LogoutButton.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","useAuth0","loginWithRedirect","isAuthenticated","onClick","LogoutButton","logout","Profile","user","src","picture","alt","name","data","App","isLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","process","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"oMAAe,I,mBCYAA,EAVK,WACpB,MAA8CC,cAAvCC,EAAP,EAAOA,kBACH,OADJ,EAA2BC,iBAGnB,wBAAQC,QAAS,kBAAKF,KAAtB,qBCOOG,EAXM,WACrB,MAAmCJ,cAA5BK,EAAP,EAAOA,OACH,OADJ,EAAgBH,iBAGR,wBAAQC,QAAS,kBAAKE,KAAtB,sB,gBCQOC,EAXC,WAChB,MAAiCN,cAA1BO,EAAP,EAAOA,KACH,OADJ,EAAcL,iBAGN,gCACI,qBAAKM,IAAKD,EAAKE,QAASC,IAAKH,EAAKI,OAClC,cAAC,IAAD,CAAYC,KAAML,QCWfM,MAbf,WAEE,OADsBb,cAAdc,UACc,4CAGpB,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAD,CACAC,OALaC,4BAMbC,SALeD,mCAMfE,YAAaC,OAAOC,SAASC,OAH7B,SAKE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.935ca8bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport  {useAuth0} from '@auth0/auth0-react'\r\nconst LoginButton = () =>   {\r\nconst {loginWithRedirect  ,isAuthenticated} = useAuth0();\r\n    return (\r\n        !isAuthenticated && (\r\n        <button onClick={()=> loginWithRedirect()}>\r\n        Log in\r\n        </button>\r\n    ))\r\n}\r\n\r\nexport default LoginButton","import React from 'react';\r\nimport  {useAuth0} from '@auth0/auth0-react'\r\nconst LogoutButton = () =>   {\r\nconst {logout  ,isAuthenticated} = useAuth0();\r\n    return (\r\n        isAuthenticated && (\r\n        <button onClick={()=> logout()}>\r\n        Log out\r\n        </button>\r\n    )\r\n    )\r\n}\r\n\r\nexport default LogoutButton","import React from 'react';\r\nimport  {useAuth0} from '@auth0/auth0-react'\r\nimport JSONPretty from 'react-json-pretty'\r\nconst Profile = () =>   {\r\nconst {user  ,isAuthenticated} = useAuth0();\r\n    return (\r\n        isAuthenticated && (\r\n        <div>\r\n            <img src={user.picture} alt={user.name}/>\r\n            <JSONPretty data={user}/>            \r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Profile","import logo from './logo.svg';\nimport './App.css';\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport Profile from './components/Profile';\nimport { useAuth0 } from '@auth0/auth0-react'\n\nfunction App() {\n  const { isLoading } = useAuth0();\n  if (isLoading) return <div>Loading..</div>\n\n  return (\n    <div>\n      <LoginButton />\n      <LogoutButton />\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Auth0Provider} from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN\nconst clientId = process.env.REACT_APP_AUTH0_CLIENTID\n\nReactDOM.render(\n  <Auth0Provider\n  domain={domain}\n  clientId={clientId}\n  redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}